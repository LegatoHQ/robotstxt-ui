/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IRobot, IRobotInterface } from "../../../src/token/IRobot";

const _abi = [
  {
    inputs: [],
    name: "NotRobotTxt",
    type: "error",
  },
  {
    inputs: [],
    name: "NotTransferable",
    type: "error",
  },
  {
    inputs: [],
    name: "SameAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "robotTxt",
        type: "address",
      },
    ],
    name: "RobotTxtUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRobotTxt",
        type: "address",
      },
    ],
    name: "setRobotTxt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IRobot__factory {
  static readonly abi = _abi;
  static createInterface(): IRobotInterface {
    return new utils.Interface(_abi) as IRobotInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IRobot {
    return new Contract(address, _abi, signerOrProvider) as IRobot;
  }
}
